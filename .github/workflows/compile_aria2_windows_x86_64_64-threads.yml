#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: GPL-3.0
# Author: lazymartin
#=================================================

name: Compile aria2 windows x86_64 Latest release

on:
  schedule:
    - cron: '00 21 * * 0'
  push:
    paths: 
      - '.github/workflows/compile_aria2_windows_x86_64_64-threads.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64
        
    - name: Install dependences
      run: |
        
        #IMPORTANT: Require install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64

        #CHECK TOOL FOR DOWNLOAD
        aria2c --help > /dev/null
        if [ "$?" -eq 0 ] ; then
          DOWNLOADER="aria2c --check-certificate=false"
        else
          DOWNLOADER="wget -c"
        fi

        ## DEPENDENCES ##
        ZLIB_ver=`curl -s http://www.zlib.net/|grep -A 3 "Current release"|grep -oE "([0-9]{1,2}\.){2}[0-9]{1,2}"`
        ZLIB=http://www.zlib.net/zlib-${ZLIB_ver}.tar.gz
        # ZLIB=http://sourceforge.net/projects/libpng/files/zlib/1.2.11/zlib-1.2.11.tar.gz
        OPENSSL_ver=`curl -s https://www.openssl.org/source/|grep -oE "[0-9]\.[0-9]{1,2}\.[0-9]{1,2}[a-z]"|sort|uniq|tail -n 1`
        OPENSSL=http://www.openssl.org/source/openssl-${OPENSSL_ver}.tar.gz
        # OPENSSL=http://www.openssl.org/source/openssl-1.0.2u.tar.gz
        EXPAT_ver_1=`curl -s --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/libexpat/libexpat/releases/latest|grep tag_name|awk -F "\"" '{print $4}'`
        EXPAT_ver_2=`echo ${EXPAT_ver_1}|sed "s/R_//g;s/_/\./g"`
        EXPAT=https://github.com/libexpat/libexpat/releases/download/${EXPAT_ver_1}/expat-${EXPAT_ver_2}.tar.bz2
        # EXPAT=https://github.com/libexpat/libexpat/releases/download/R_2_2_10/expat-2.2.10.tar.bz2
        SQLITE3_ver_1=`curl -s https://www.sqlite.org/download.html|grep -oE "sqlite-autoconf-[0-9]{7}"|grep -m 1 -oE "[0-9]{7}"`
        SQLITE3_ver_2=`curl -s https://www.sqlite.org/download.html|grep "sqlite-autoconf"|awk -F "\'" 'NR==2 {print $4}'`
        SQLITE3=https://sqlite.org/${SQLITE3_ver_2}
        # SQLITE3=https://sqlite.org/2020/sqlite-autoconf-3330000.tar.gz
        C_ARES_ver=`curl -s https://c-ares.haxx.se/download/|grep -oE "([0-9]{1,2}\.){2}[0-9]{1,2}"|head -n 1`
        C_ARES=https://c-ares.haxx.se/download/c-ares-${C_ARES_ver}.tar.gz
        # C_ARES=https://c-ares.haxx.se/download/c-ares-1.16.1.tar.gz
        SSH2_ver=`curl -s https://www.libssh2.org|grep "The latest release"|grep -oE "([0-9]{1,2}\.){2}[0-9]{1,2}"`
        SSH2=https://www.libssh2.org/download/libssh2-${SSH2_ver}.tar.gz
        # SSH2=https://www.libssh2.org/download/libssh2-1.7.0.tar.gz

        # ZLIB=http://sourceforge.net/projects/libpng/files/zlib/1.2.11/zlib-1.2.11.tar.gz
        # OPENSSL=http://www.openssl.org/source/openssl-1.0.2u.tar.gz
        # # OPENSSL=https://www.openssl.org/source/openssl-1.1.1i.tar.gz
        # EXPAT=https://github.com/libexpat/libexpat/releases/download/R_2_2_10/expat-2.2.10.tar.bz2
        # SQLITE3=https://sqlite.org/2020/sqlite-autoconf-3330000.tar.gz
        # C_ARES=https://c-ares.haxx.se/download/c-ares-1.16.1.tar.gz
        # SSH2=https://www.libssh2.org/download/libssh2-1.7.0.tar.gz

        ## CONFIG ##
        BUILD_DIRECTORY=/tmp/
        HOST=x86_64-w64-mingw32
        PREFIX=/usr/x86_64-w64-mingw32

        ## BUILD ##
        cd $BUILD_DIRECTORY

        # zlib build
        $DOWNLOADER $ZLIB
        tar zxvf zlib-1.2.11.tar.gz
        cd zlib-1.2.11/
        CC=$HOST-gcc CXX=$HOST-g++ AR=$HOST-ar RANLIB=$HOST-ranlib ./configure --prefix=$PREFIX --static
        sudo make -j$(nproc)
        sudo make install

        # expat build
        cd ..
        $DOWNLOADER $EXPAT
        tar jxvf expat-2.2.10.tar.bz2
        cd expat-2.2.10/
        CC=$HOST-gcc CXX=$HOST-g++ AR=$HOST-ar RANLIB=$HOST-ranlib ./configure --prefix=$PREFIX --host=$HOST --enable-static --enable-shared
        sudo make -j$(nproc)
        sudo make install

        # c-ares build
        cd ..
        $DOWNLOADER $C_ARES
        tar zxvf c-ares-1.16.1.tar.gz
        cd c-ares-1.16.1/
        CC=$HOST-gcc CXX=$HOST-g++ AR=$HOST-ar RANLIB=$HOST-ranlib ./configure --prefix=$PREFIX --host=$HOST --enable-static --disable-shared
        sudo make -j$(nproc)
        sudo make install
 
        # Openssl build
        cd ..
        $DOWNLOADER $OPENSSL
        tar zxvf openssl-1.0.2u.tar.gz
        cd openssl-1.0.2u/
        ./Configure mingw64 --cross-compile-prefix=$HOST- --prefix=$PREFIX shared
        sudo make -j$(nproc)
        sudo make install

        # sqlite3
        cd ..
        $DOWNLOADER $SQLITE3
        tar zxvf sqlite-autoconf-3330000.tar.gz
        cd sqlite-autoconf-3330000/
        CC=$HOST-gcc CXX=$HOST-g++ AR=$HOST-ar RANLIB=$HOST-ranlib ./configure --prefix=$PREFIX --host=$HOST --enable-static --enable-shared
        sudo make -j$(nproc)
        sudo make install

        # libssh2
        cd ..
        $DOWNLOADER $SSH2
        tar zxvf libssh2-1.7.0.tar.gz
        cd libssh2-1.7.0/
        rm -rf $PREFIX/lib/pkgconfig/libssh2.pc
        CC=$HOST-gcc CXX=$HOST-g++ AR=$HOST-ar RANLIB=$HOST-ranlib ./configure --prefix=$PREFIX --host=$HOST --enable-static --disable-shared
        sudo make -j$(nproc)
        sudo make install
        #
    - name: Compile
      run: |
        REPO_NAME="aria2/aria2"
        FILE_VER=`curl -s https://api.github.com/repos/$REPO_NAME/releases/latest|grep tag_name|awk -F "\"" '{print $4}'|grep -oE [0-9].[0-9]*.[0-9]*`
        FILE_NAME=`curl -s https://api.github.com/repos/$REPO_NAME/releases/latest|grep $FILE_VER.tar.xz|awk -F "\"" 'NR==1 {print $4}'`
        DOWNLOAD_LINK=`curl -s https://api.github.com/repos/$REPO_NAME/releases/latest|grep -oE "https://github.com.*$FILE_VER.tar.xz"`
        
        wget -q $DOWNLOAD_LINK --show-progress -O $FILE_NAME
        tar xf $FILE_NAME
        cd `echo $FILE_NAME|sed "s/.tar.xz//g"`
        sed -i s"/1\, 16\,/1\, 64\,/" ./src/OptionHandlerFactory.cc
        
        HOST=x86_64-w64-mingw32
        PREFIX=/usr/x86_64-w64-mingw32

        ./configure \
            --host=$HOST \
            --prefix=$PREFIX \
            --without-included-gettext \
            --disable-nls \
            --with-libcares \
            --without-gnutls \
            --with-openssl \
            --with-sqlite3 \
            --without-libxml2 \
            --with-libexpat \
            --with-libz \
            --without-libgmp \
            --with-libssh2 \
            --without-libgcrypt \
            --without-libnettle \
            --with-cppunit-prefix=$PREFIX \
            ARIA2_STATIC=yes \
            CPPFLAGS="-I$PREFIX/include" \
            LDFLAGS="-L$PREFIX/lib" \
            PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig"
            # --without-wintls \
        sudo make -j$(nproc)
        sudo $HOST-strip src/aria2c.exe

    - name: Assemble Artifact
      run: |
        mkdir -p ./artifact
        REPO_NAME="aria2/aria2"
        FILE_VER=`curl -s --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/$REPO_NAME/releases/latest|grep tag_name|awk -F "\"" '{print $4}'|grep -oE [0-9].[0-9]*.[0-9]*`
        work_path=`curl -s --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/$REPO_NAME/releases/latest|grep $FILE_VER.tar.xz|awk -F "\"" 'NR==1 {print $4}'|sed "s/.tar.xz//g"`
        cp /home/runner/work/scripts/scripts/${work_path}/src/aria2c.exe ./artifact/aria2c_windows_x86_64_64-threads.exe
        
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./artifact/*
        tag: "Last_release"
        overwrite: true
        file_glob: true

